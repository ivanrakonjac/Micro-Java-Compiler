INFO  19:00:48,430 - Compiling source file: C:\Users\Nikola\Desktop\MJCompiler\MJCompiler\test\program.mj
INFO  19:00:48,471 - #6 program
INFO  19:00:48,471 - #2 Program
INFO  19:00:48,471 - #2 int
INFO  19:00:48,472 - #2 x
INFO  19:00:48,472 - #40 ,
INFO  19:00:48,473 - #2 z
INFO  19:00:48,473 - #36 =
ERROR 19:00:48,473 - 
Sintaksna greska na liniji 2
INFO  19:00:48,474 - #3 3
INFO  19:00:48,474 - #40 ,
INFO  19:00:48,474 - #2 y
INFO  19:00:48,474 - #39 ;
INFO  19:00:48,474 - #12 class
INFO  19:00:48,474 - #2 A
INFO  19:00:48,474 - #44 {
INFO  19:00:48,474 - #2 int
INFO  19:00:48,475 - #2 x
INFO  19:00:48,475 - #46 [
INFO  19:00:48,475 - #47 ]
INFO  19:00:48,475 - #40 ,
INFO  19:00:48,475 - #2 y
INFO  19:00:48,475 - #46 [
INFO  19:00:48,478 - #47 ]
INFO  19:00:48,478 - #39 ;
INFO  19:00:48,478 - #45 }
INFO  19:00:48,478 - #10 const
INFO  19:00:48,478 - #2 int
INFO  19:00:48,478 - #2 pi
INFO  19:00:48,478 - #36 =
INFO  19:00:48,478 - #3 3
INFO  19:00:48,478 - #40 ,
INFO  19:00:48,478 - #2 e
INFO  19:00:48,478 - #36 =
INFO  19:00:48,478 - #3 2
INFO  19:00:48,478 - #39 ;
INFO  19:00:48,478 - #12 class
INFO  19:00:48,478 - #2 B
INFO  19:00:48,478 - #13 extends
INFO  19:00:48,478 - #2 A
INFO  19:00:48,478 - #44 {
INFO  19:00:48,478 - #2 int
INFO  19:00:48,478 - #2 i
INFO  19:00:48,478 - #39 ;
INFO  19:00:48,478 - #44 {
INFO  19:00:48,479 - #2 int
INFO  19:00:48,479 - #2 getValue
INFO  19:00:48,479 - #42 (
INFO  19:00:48,479 - #2 int
INFO  19:00:48,479 - #2 a
INFO  19:00:48,479 - #40 ,
INFO  19:00:48,479 - #2 int
INFO  19:00:48,479 - #2 b
INFO  19:00:48,479 - #40 ,
INFO  19:00:48,479 - #2 int
INFO  19:00:48,479 - #2 x
INFO  19:00:48,479 - #43 )
INFO  19:00:48,479 - #2 int
INFO  19:00:48,479 - #2 b
INFO  19:00:48,479 - #39 ;
INFO  19:00:48,479 - #2 bool
INFO  19:00:48,479 - #2 c
INFO  19:00:48,479 - #39 ;
INFO  19:00:48,479 - #44 {
INFO  19:00:48,480 - #8 return
INFO  19:00:48,480 - #2 this
INFO  19:00:48,480 - #41 .
INFO  19:00:48,480 - #2 i
INFO  19:00:48,480 - #23 +
INFO  19:00:48,480 - #2 this
INFO  19:00:48,486 - #41 .
INFO  19:00:48,486 - #2 x
INFO  19:00:48,486 - #46 [
INFO  19:00:48,486 - #3 0
INFO  19:00:48,486 - #47 ]
INFO  19:00:48,486 - #23 +
INFO  19:00:48,486 - #2 a
INFO  19:00:48,486 - #39 ;
INFO  19:00:48,486 - #45 }
INFO  19:00:48,486 - #11 void
INFO  19:00:48,486 - #2 m
INFO  19:00:48,486 - #42 (
INFO  19:00:48,486 - #43 )
INFO  19:00:48,486 - #44 {
INFO  19:00:48,487 - #45 }
INFO  19:00:48,487 - #45 }
INFO  19:00:48,487 - #45 }
INFO  19:00:48,487 - #12 class
INFO  19:00:48,487 - #2 C
INFO  19:00:48,487 - #13 extends
INFO  19:00:48,487 - #2 B
INFO  19:00:48,487 - #44 {
INFO  19:00:48,487 - #2 A
INFO  19:00:48,487 - #2 theA
INFO  19:00:48,488 - #39 ;
INFO  19:00:48,488 - #2 int
INFO  19:00:48,488 - #2 a
INFO  19:00:48,488 - #39 ;
INFO  19:00:48,488 - #45 }
INFO  19:00:48,488 - #44 {
INFO  19:00:48,488 - #11 void
INFO  19:00:48,488 - #2 main
INFO  19:00:48,488 - #42 (
INFO  19:00:48,488 - #43 )
INFO  19:00:48,488 - #2 A
INFO  19:00:48,488 - #2 a
INFO  19:00:48,488 - #39 ;
INFO  19:00:48,489 - #2 C
INFO  19:00:48,489 - #2 c
INFO  19:00:48,489 - #39 ;
INFO  19:00:48,489 - #2 int
INFO  19:00:48,489 - #2 i
INFO  19:00:48,489 - #39 ;
INFO  19:00:48,489 - #2 int
INFO  19:00:48,489 - #2 x
INFO  19:00:48,489 - #46 [
INFO  19:00:48,489 - #47 ]
INFO  19:00:48,489 - #39 ;
INFO  19:00:48,489 - #2 char
INFO  19:00:48,489 - #2 ch
INFO  19:00:48,489 - #39 ;
INFO  19:00:48,490 - #2 int
INFO  19:00:48,490 - #2 result
INFO  19:00:48,490 - #39 ;
INFO  19:00:48,490 - #44 {
INFO  19:00:48,490 - #2 i
INFO  19:00:48,490 - #36 =
INFO  19:00:48,490 - #3 0
INFO  19:00:48,490 - #39 ;
INFO  19:00:48,490 - #2 i
INFO  19:00:48,490 - #36 =
INFO  19:00:48,490 - #39 ;
INFO  19:00:48,490 - #2 result
INFO  19:00:48,490 - #36 =
INFO  19:00:48,490 - #17 switch
INFO  19:00:48,491 - #42 (
INFO  19:00:48,491 - #2 i
INFO  19:00:48,491 - #43 )
INFO  19:00:48,491 - #44 {
INFO  19:00:48,491 - #18 case
INFO  19:00:48,491 - #3 0
INFO  19:00:48,491 - #49 :
INFO  19:00:48,491 - #51 yield
INFO  19:00:48,491 - #3 1
INFO  19:00:48,491 - #39 ;
INFO  19:00:48,491 - #18 case
INFO  19:00:48,491 - #3 1
INFO  19:00:48,491 - #49 :
INFO  19:00:48,491 - #51 yield
INFO  19:00:48,491 - #3 0
INFO  19:00:48,491 - #39 ;
INFO  19:00:48,491 - #50 default
INFO  19:00:48,491 - #49 :
INFO  19:00:48,491 - #51 yield
INFO  19:00:48,492 - #3 5
INFO  19:00:48,492 - #39 ;
INFO  19:00:48,492 - #45 }
INFO  19:00:48,492 - #39 ;
INFO  19:00:48,492 - #2 a
INFO  19:00:48,492 - #36 =
INFO  19:00:48,492 - #14 new
INFO  19:00:48,492 - #2 A
INFO  19:00:48,492 - #39 ;
INFO  19:00:48,492 - #2 a
INFO  19:00:48,492 - #41 .
INFO  19:00:48,492 - #2 x
INFO  19:00:48,492 - #36 =
INFO  19:00:48,492 - #14 new
INFO  19:00:48,492 - #2 int
INFO  19:00:48,492 - #46 [
INFO  19:00:48,492 - #3 5
INFO  19:00:48,492 - #47 ]
INFO  19:00:48,493 - #39 ;
INFO  19:00:48,493 - #2 a
INFO  19:00:48,493 - #41 .
INFO  19:00:48,493 - #2 y
INFO  19:00:48,493 - #36 =
INFO  19:00:48,493 - #14 new
INFO  19:00:48,493 - #2 int
INFO  19:00:48,493 - #46 [
INFO  19:00:48,493 - #3 5
INFO  19:00:48,493 - #47 ]
INFO  19:00:48,493 - #39 ;
INFO  19:00:48,493 - #2 c
INFO  19:00:48,493 - #36 =
INFO  19:00:48,493 - #14 new
INFO  19:00:48,493 - #2 C
INFO  19:00:48,493 - #39 ;
INFO  19:00:48,493 - #2 c
INFO  19:00:48,494 - #41 .
INFO  19:00:48,494 - #2 theA
INFO  19:00:48,494 - #36 =
INFO  19:00:48,494 - #2 a
INFO  19:00:48,494 - #39 ;
INFO  19:00:48,494 - #2 c
INFO  19:00:48,494 - #41 .
INFO  19:00:48,494 - #2 x
INFO  19:00:48,494 - #36 =
INFO  19:00:48,494 - #14 new
INFO  19:00:48,494 - #2 int
INFO  19:00:48,494 - #46 [
INFO  19:00:48,494 - #3 5
INFO  19:00:48,494 - #47 ]
INFO  19:00:48,494 - #39 ;
INFO  19:00:48,494 - #2 x
INFO  19:00:48,494 - #36 =
INFO  19:00:48,494 - #14 new
INFO  19:00:48,494 - #2 int
INFO  19:00:48,494 - #46 [
INFO  19:00:48,494 - #3 3
INFO  19:00:48,494 - #47 ]
INFO  19:00:48,494 - #39 ;
INFO  19:00:48,495 - #22 read
INFO  19:00:48,495 - #42 (
INFO  19:00:48,495 - #2 c
INFO  19:00:48,495 - #41 .
INFO  19:00:48,495 - #2 i
INFO  19:00:48,495 - #43 )
INFO  19:00:48,495 - #39 ;
INFO  19:00:48,495 - #2 i
INFO  19:00:48,495 - #36 =
INFO  19:00:48,495 - #3 0
INFO  19:00:48,495 - #39 ;
INFO  19:00:48,495 - #19 do
INFO  19:00:48,495 - #44 {
INFO  19:00:48,495 - #22 read
INFO  19:00:48,495 - #42 (
INFO  19:00:48,495 - #2 c
INFO  19:00:48,495 - #41 .
INFO  19:00:48,495 - #2 x
INFO  19:00:48,495 - #46 [
INFO  19:00:48,495 - #2 i
INFO  19:00:48,496 - #47 ]
INFO  19:00:48,496 - #43 )
INFO  19:00:48,496 - #39 ;
INFO  19:00:48,496 - #22 read
INFO  19:00:48,496 - #42 (
INFO  19:00:48,496 - #2 c
INFO  19:00:48,496 - #41 .
INFO  19:00:48,496 - #2 theA
INFO  19:00:48,496 - #41 .
INFO  19:00:48,496 - #2 x
INFO  19:00:48,496 - #46 [
INFO  19:00:48,496 - #2 i
INFO  19:00:48,496 - #47 ]
INFO  19:00:48,496 - #43 )
INFO  19:00:48,496 - #39 ;
INFO  19:00:48,496 - #2 i
INFO  19:00:48,496 - #37 ++
INFO  19:00:48,496 - #39 ;
INFO  19:00:48,496 - #45 }
INFO  19:00:48,496 - #20 while
INFO  19:00:48,496 - #42 (
INFO  19:00:48,497 - #2 i
INFO  19:00:48,497 - #32 <
INFO  19:00:48,497 - #3 5
INFO  19:00:48,497 - #43 )
INFO  19:00:48,497 - #39 ;
INFO  19:00:48,497 - #21 print
INFO  19:00:48,497 - #42 (
INFO  19:00:48,497 - #2 c
INFO  19:00:48,497 - #41 .
INFO  19:00:48,497 - #2 getValue
INFO  19:00:48,497 - #42 (
INFO  19:00:48,497 - #2 c
INFO  19:00:48,497 - #41 .
INFO  19:00:48,497 - #2 theA
INFO  19:00:48,497 - #41 .
INFO  19:00:48,497 - #2 x
INFO  19:00:48,497 - #46 [
INFO  19:00:48,497 - #3 0
INFO  19:00:48,498 - #47 ]
INFO  19:00:48,498 - #43 )
INFO  19:00:48,498 - #43 )
INFO  19:00:48,498 - #39 ;
INFO  19:00:48,498 - #2 c
INFO  19:00:48,498 - #41 .
INFO  19:00:48,498 - #2 m
INFO  19:00:48,498 - #42 (
INFO  19:00:48,498 - #43 )
INFO  19:00:48,498 - #39 ;
INFO  19:00:48,498 - #22 read
INFO  19:00:48,498 - #42 (
INFO  19:00:48,498 - #2 ch
INFO  19:00:48,498 - #43 )
INFO  19:00:48,498 - #39 ;
INFO  19:00:48,498 - #16 if
INFO  19:00:48,498 - #42 (
INFO  19:00:48,498 - #3 5
INFO  19:00:48,498 - #43 )
INFO  19:00:48,498 - #44 {
INFO  19:00:48,498 - #21 print
INFO  19:00:48,498 - #42 (
INFO  19:00:48,498 - #2 i
INFO  19:00:48,498 - #43 )
INFO  19:00:48,498 - #39 ;
INFO  19:00:48,498 - #16 if
INFO  19:00:48,498 - #42 (
INFO  19:00:48,499 - #3 2
INFO  19:00:48,499 - #43 )
INFO  19:00:48,499 - #44 {
INFO  19:00:48,499 - #45 }
INFO  19:00:48,499 - #45 }
INFO  19:00:48,499 - #15 else
INFO  19:00:48,499 - #16 if
INFO  19:00:48,499 - #42 (
INFO  19:00:48,499 - #24 -
INFO  19:00:48,499 - #3 5
INFO  19:00:48,499 - #43 )
INFO  19:00:48,499 - #44 {
INFO  19:00:48,499 - #45 }
INFO  19:00:48,499 - #15 else
INFO  19:00:48,499 - #44 {
INFO  19:00:48,499 - #21 print
INFO  19:00:48,499 - #42 (
INFO  19:00:48,499 - #3 2
INFO  19:00:48,499 - #43 )
INFO  19:00:48,499 - #39 ;
INFO  19:00:48,499 - #16 if
INFO  19:00:48,499 - #42 (
INFO  19:00:48,499 - #3 2
INFO  19:00:48,499 - #43 )
INFO  19:00:48,499 - #44 {
INFO  19:00:48,499 - #45 }
INFO  19:00:48,499 - #15 else
INFO  19:00:48,500 - #44 {
INFO  19:00:48,500 - #45 }
INFO  19:00:48,500 - #45 }
INFO  19:00:48,500 - #45 }
INFO  19:00:48,500 - #45 }
ERROR 19:00:48,500 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 60
